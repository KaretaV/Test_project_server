// <auto-generated />
using API_Tranzit_Interface;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_Tranzit_Interface.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CounterLibrary.ProductCounter", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.ToTable("Counters");
                });

            modelBuilder.Entity("MyLibrary.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Prise")
                        .HasColumnType("int");

                    b.Property<string>("TypeOfProduct")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Product");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MyLibrary.MeatProduct", b =>
                {
                    b.HasBaseType("MyLibrary.Product");

                    b.Property<bool>("Nature")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("MeatProduct");
                });

            modelBuilder.Entity("MyLibrary.MilkProduct", b =>
                {
                    b.HasBaseType("MyLibrary.Product");

                    b.Property<int>("ProductionDay")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("MilkProduct");
                });

            modelBuilder.Entity("MyLibrary.SweetProduct", b =>
                {
                    b.HasBaseType("MyLibrary.Product");

                    b.Property<int>("AmountOfSugar")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SweetProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
